eureka:
  client:
    serviceUrl:
    #eureka注册中心地址
      defaultZone: http://localhost:8888/eureka/
server:
#项目端口号
  port: 3011
spring:
  application:
  #服务名称,随便写
    name: service-zuul
    
# 下面整个树都非必须，如果不配置，
#将默认使用 http://GATEWAY:GATEWAY_PORT/想要访问的Eureka服务id的小写/** 
#路由到：http://想要访问的Eureka服务id的小写:该服务端口/**
#------------------------------ 默认行为 ----------------------------------------
#使用Eureka注册中心则zuul服务网关会自动生成以下路由规则
zuul: #需要忽略的头部信息，不在传播到其他服务 
  sensitive-headers: Access-Control-Allow-Origin 
  ignored-headers: Access-Control-Allow-Origin,H-APP-Id,Token,APPToken
  
security:
  oauth2:
    resource:
      ####从认证授权中心上验证token
      tokenInfoUri: http://localhost:3012/oauth/check_token
      preferTokenInfo: true
    client:
      accessTokenUri: http://localhost:3012/oauth/token
      userAuthorizationUri: http://localhost:3012/oauth/authorize
#      ###appid
      clientId: client_1
#      ###appSecret
      clientSecret: 123456
#zuul:
#  routes:
#    api-a:
#      path: /service-provider/**
#      service-id: service-provider
#    api-b:
#      path: /service-consumer/**
#      service-id: service-consumer

#访问http://127.0.0.1:8889/service-provider/getFuture?token=666
#会被服务网关zuul转发到http://127.0.0.1:8002/getFuture?token=666
#http://127.0.0.1:8889/service-consumer/getProviderFuture?token=666
#会被服务网关zuul被转发到http://127.0.0.1:8001/getProviderFutur?token=666
#-------------------------------- 自定义配置  --------------------------------------
#亦可以自定义配置zuul服务网关的路由规则
#zuul:
#  routes:
#    api-a:
#      path: /api-provider/**
#      service-id: service-provider
#    api-b:
#      path: /api-consumer/**
#      service-id: service-consumer

#发送请求http://127.0.0.1:8889/api-consumer/getProviderFuture?token=666
#会被服务网关zuul被转发到http://127.0.0.1:8001/getProviderFutur?token=666

